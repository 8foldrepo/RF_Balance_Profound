Index: manager.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PyQt5.QtCore import QMutex, QObject, QThread, QWaitCondition, Qt, pyqtSignal, pyqtSlot\r\nfrom typing import Optional\r\nfrom Utilities.load_config import ROOT_LOGGER_NAME, LOGGER_FORMAT\r\nimport logging\r\n\r\nlog_formatter = logging.Formatter(LOGGER_FORMAT)\r\n\r\nmotor_logger = logging.getLogger('motor_log')\r\n\r\nfile_handler = logging.FileHandler(\"./logs/motor.log\", mode='w')\r\nfile_handler.setFormatter(log_formatter)\r\nmotor_logger.addHandler(file_handler)\r\n\r\nmotor_logger.setLevel(logging.INFO)\r\n\r\nroot_logger = logging.getLogger(ROOT_LOGGER_NAME)\r\n\r\nfrom Hardware.abstract_motor_controller import AbstractMotorController\r\n\r\nclass Manager(QThread):\r\n    \"\"\"\r\n    this class acts as the chief executive for the application. It is in charge of recieving commands from the UI,\r\n    dictating actions to other classes, and emitting feedback back to the UI\r\n\r\n    Signals:\r\n        logger_signal: convey info to the user via a feedback widget\r\n        finished_signal: emitted when the thread is ready to be deleted.\r\n\r\n        description_signal = pyqtSignal(str): Convey script metadata to UI\r\n        created_on_signal = pyqtSignal(str): Convey script metadata to UI\r\n        num_tasks_signal = pyqtSignal(str): Convey script metadata to UI\r\n\r\n    Slots:\r\n        execute_command: execute a command given to the application\r\n\r\n    Methods:\r\n\r\n    \"\"\"\r\n    #Script metadata\r\n    description_signal = pyqtSignal(str)\r\n    created_on_signal = pyqtSignal(str)\r\n    created_by_signal = pyqtSignal(str)\r\n    num_tasks_signal = pyqtSignal(int)\r\n    script_name_signal = pyqtSignal(str)\r\n\r\n    #Compartmentalize into motor interface thread later\r\n    MotorCommands = pyqtSignal(str)\r\n\r\n    step_number_signal = pyqtSignal(int)\r\n\r\n    logger_signal = pyqtSignal(str)\r\n    finished_signal = pyqtSignal()\r\n    Motors = None\r\n\r\n    def __init__(self, parent: Optional[QObject], config: dict):\r\n        super().__init__(parent=parent, objectName=u\"manager_thread\")\r\n\r\n        self.script = None\r\n        self.stay_alive = True\r\n\r\n        self.config = config\r\n\r\n        self.cmd = 'POS'\r\n\r\n        self.mutex = QMutex()\r\n        self.condition = QWaitCondition()\r\n\r\n        # -> check if we are simulating hardware\r\n        self.SIMULATE_HARDWARE = config['Debugging']['simulate_hw']\r\n\r\n        if self.SIMULATE_HARDWARE:\r\n            self.Motors = AbstractMotorController(config=self.config)\r\n            self.Motors.connect()\r\n\r\n    def run(self) -> None:\r\n        \"\"\"\r\n        Overloaded function from QThread, this is the main scope control thread\r\n        function.\r\n        \"\"\"\r\n        self.mutex.lock()\r\n\r\n        # -> try to connect to the motor\r\n        msg = f\"SIMULATE HARDWARE is: {self.SIMULATE_HARDWARE}\"\r\n        self.log_msg(level='info', message=msg)\r\n\r\n        self.stay_alive = True\r\n\r\n        while self.stay_alive is True:\r\n\r\n            # root_logger.info('Waiting in motor thread.')\r\n            # wait_bool = self.condition.wait(self.mutex)\r\n            wait_bool = self.condition.wait(self.mutex, 50)\r\n            # root_logger.info(f\"Finished waiting in motor thread. {wait_bool}\")\r\n\r\n            if self.stay_alive is False:\r\n                break\r\n\r\n            self.cmd = self.cmd.upper()\r\n            cmd_ray = self.cmd.split(' ')\r\n            if cmd_ray[0] == 'LOAD':\r\n                self.log_msg('info', message=\"Loading script\")\r\n                try:\r\n                    cmd_ray.pop(0)\r\n                    path = ' '.join(cmd_ray)\r\n                    self.load_script(path)\r\n                except Exception as e:\r\n                    self.log_msg(\"info\", f\"Error in load script: {e}\")\r\n                self.cmd = ''\r\n            elif cmd_ray[0] == 'RUN':\r\n                self.log_msg('info', message=\"Running script\")\r\n                try:\r\n                    self.run_script()\r\n                except Exception as e:\r\n                    self.log_msg(\"info\", f\"Error in run script: {e}\")\r\n\r\n                self.cmd == ''\r\n            elif cmd_ray[0] == 'CLOSE':\r\n                self.stay_alive = False\r\n                break\r\n            #Motor commands\r\n            elif self.cmd == 'Disconnect'.upper():\r\n                self.Motors.disconnect()\r\n            elif self.cmd == 'Connect'.upper():\r\n                self.Motors.connect()\r\n            elif cmd_ray[0] == 'JOG' and cmd_ray[1] == 'SPEED':\r\n                self.Motors.jog_speed = cmd_ray[2]\r\n            elif cmd_ray[0] == 'SCAN' and cmd_ray[1] == 'SPEED':\r\n                self.Motors.scan_speed = cmd_ray[2]\r\n            elif self.cmd == 'Begin Motion X+'.upper():\r\n                self.Motors.jog('X', 1)\r\n            elif self.cmd == 'Begin Motion X-'.upper():\r\n                self.Motors.jog('X', -1)\r\n            elif self.cmd == 'Begin Motion R+'.upper():\r\n                self.Motors.jog('R', 1)\r\n            elif self.cmd == 'Begin Motion R-'.upper():\r\n                self.Motors.jog('R', -1)\r\n            elif self.cmd == 'Stop Motion'.upper():\r\n                self.Motors.stop_motion()\r\n            elif self.cmd == 'Get Position'.upper():\r\n                self.Motors.get_position()\r\n            elif cmd_ray[0] == 'GO':\r\n                self.Motors.go_to_position(axes=['X','Y','Z','R'],coords=cmd_ray[1].split(','))\r\n            #What to do when there is no command\r\n            else:\r\n                pass\r\n\r\n            self.Motors.get_position()\r\n            self.cmd = \"\"\r\n\r\n        self.wrap_up()\r\n        self.mutex.unlock()\r\n\r\n        return super().run()\r\n\r\n    def load_script(self, path):\r\n        self.script = open(path, \"r\")\r\n\r\n        # Send name of script to UI\r\n        split_path = path.split('/')\r\n        name = split_path[len(split_path)-1]\r\n        self.script_name_signal.emit(name)\r\n\r\n        # Load the top level metadata and emit it to the UI\r\n        for line in self.script:\r\n            line = line.upper()\r\n            # If an empty line is detected that means the end of the metadata is reached.\r\n            print(line)\r\n            if line == '\\n' or line == '[TASK0]':\r\n                break\r\n\r\n            ray = line.split(' = ')\r\n\r\n            if ray[0] == '# OF TASKS':\r\n                self.num_tasks_signal.emit(int(ray[1].replace('\"', \"\")))\r\n            elif ray[0] == 'CREATEDON':\r\n                self.created_on_signal.emit(ray[1].replace('\"', \"\"))\r\n            if ray[0] == 'CREATEDBY':\r\n                self.created_by_signal.emit(ray[1].replace('\"', \"\"))\r\n            elif ray[0] == 'DESCRIPTION':\r\n                self.description_signal.emit(ray[1].replace('\"', \"\"))\r\n\r\n    def run_script(self):\r\n        for command in self.script:\r\n            command = command.upper()\r\n            self.log_msg('info', message=command)\r\n            if '[TASK' in command:\r\n                step_number = int(command.replace('[TASK', '').replace(']', ''))\r\n                self.step_number_signal.emit(step_number)\r\n\r\n    def log_msg(self, level: str, message: str) -> None:\r\n        \"\"\"\r\n        Convenience function to log messages in a compact way with useful info.\r\n\r\n            Parameters:\r\n                level (str): A string indicating the logger level, can be either\r\n                'info', 'debug' or 'error'\r\n                message (str): A string that contains the message to be logged\r\n\r\n            Returns:\r\n                None\r\n        \"\"\"\r\n        thread_name = QThread.currentThread().objectName()\r\n        log_entry = f\"[{type(self).__name__}] [{thread_name}] : {message}\"\r\n        if level == 'debug':\r\n            root_logger.debug(log_entry)\r\n            motor_logger.debug(log_entry)\r\n        elif level == 'error':\r\n            root_logger.error(log_entry)\r\n            motor_logger.error(log_entry)\r\n        elif level == 'warning':\r\n            root_logger.warning(log_entry)\r\n            motor_logger.warning(log_entry)\r\n        else:\r\n            root_logger.info(log_entry)\r\n            motor_logger.info(log_entry)\r\n\r\n    @pyqtSlot(str)\r\n    def exec_command(self, command):\r\n        self.cmd = command\r\n        self.condition.wakeAll()\r\n\r\n    def wrap_up(self):\r\n        pass\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/manager.py b/manager.py
--- a/manager.py	(revision 59eec5598a1d8b73db2fba7ab9d719c97f8301a6)
+++ b/manager.py	(date 1645461986576)
@@ -89,7 +89,7 @@
 
             # root_logger.info('Waiting in motor thread.')
             # wait_bool = self.condition.wait(self.mutex)
-            wait_bool = self.condition.wait(self.mutex, 50)
+            wait_bool = self.condition.wait(self.mutex)
             # root_logger.info(f"Finished waiting in motor thread. {wait_bool}")
 
             if self.stay_alive is False:
Index: logs/motor.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>2022-02-16 16:28:14,883 [INFO] [DummyMotors] [] : Connect\r\n2022-02-16 16:28:14,883 [INFO] [Manager] [manager_thread] : SIMULATE HARDWARE is: True\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logs/motor.log b/logs/motor.log
--- a/logs/motor.log	(revision 59eec5598a1d8b73db2fba7ab9d719c97f8301a6)
+++ b/logs/motor.log	(date 1645461987404)
@@ -1,2 +1,2 @@
-2022-02-16 16:28:14,883 [INFO] [DummyMotors] [] : Connect
-2022-02-16 16:28:14,883 [INFO] [Manager] [manager_thread] : SIMULATE HARDWARE is: True
+2022-02-21 10:46:27,404 [INFO] [DummyMotors] [] : Connect
+2022-02-21 10:46:27,404 [INFO] [Manager] [manager_thread] : SIMULATE HARDWARE is: True
Index: logs/wtf.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>2022-02-16 16:28:14,883 [INFO] [DummyMotors] [] : Connect\r\n2022-02-16 16:28:14,883 [INFO] [Manager] [manager_thread] : SIMULATE HARDWARE is: True\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logs/wtf.log b/logs/wtf.log
--- a/logs/wtf.log	(revision 59eec5598a1d8b73db2fba7ab9d719c97f8301a6)
+++ b/logs/wtf.log	(date 1645461987404)
@@ -1,2 +1,2 @@
-2022-02-16 16:28:14,883 [INFO] [DummyMotors] [] : Connect
-2022-02-16 16:28:14,883 [INFO] [Manager] [manager_thread] : SIMULATE HARDWARE is: True
+2022-02-21 10:46:27,404 [INFO] [DummyMotors] [] : Connect
+2022-02-21 10:46:27,404 [INFO] [Manager] [manager_thread] : SIMULATE HARDWARE is: True
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8073fbcf-d5eb-4eea-913b-d9d2eda5b663\" name=\"Changes\" comment=\"Changes\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/RF_Balance_Profound.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/RF_Balance_Profound.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logs/motor.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logs/motor.log\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logs/wtf.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logs/wtf.log\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24exEfOm6WAVQtQpIjvtIaczMLB\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"codeWithMe.voiceChat.enabledByDefault\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Isaiah\\Documents\\GitHub\\RF_Balance_Profound\\ui_elements\" />\r\n      <recent name=\"C:\\Users\\isaia\\OneDrive\\Documents\\GitHub\\RF_Balance_Profound\" />\r\n      <recent name=\"C:\\Users\\isaia\\OneDrive\\Documents\\GitHub\\RF_Balance_Profound\\resources\" />\r\n      <recent name=\"C:\\Users\\isaia\\OneDrive\\Documents\\GitHub\\RF_Balance_Profound\\Hardware\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\isaia\\OneDrive\\Documents\\GitHub\\RF_Balance_Profound\" />\r\n      <recent name=\"C:\\Users\\isaia\\OneDrive\\Documents\\GitHub\\RF_Balance_Profound\\resources\\config\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.main\">\r\n    <configuration name=\"MainWindow\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"RF_Balance_Profound\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/MainWindow.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"dialog_password\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"RF_Balance_Profound\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Widget_Library\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Widget_Library/dialog_password.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"RF_Balance_Profound\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\RKPC\\anaconda3\\envs\\RF_Balance_Profound\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"ui_password_dialog\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"RF_Balance_Profound\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/ui_elements\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/ui_elements/ui_password_dialog.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.MainWindow\" />\r\n      <item itemvalue=\"Python.dialog_password\" />\r\n      <item itemvalue=\"Python.main\" />\r\n      <item itemvalue=\"Python.ui_password_dialog\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.ui_password_dialog\" />\r\n        <item itemvalue=\"Python.MainWindow\" />\r\n        <item itemvalue=\"Python.dialog_password\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8073fbcf-d5eb-4eea-913b-d9d2eda5b663\" name=\"Changes\" comment=\"\" />\r\n      <created>1644004743794</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1644004743794</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Hardware/abstract_motor_controller.py</url>\r\n          <line>297</line>\r\n          <option name=\"timeStamp\" value=\"29\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n      <default-breakpoints>\r\n        <breakpoint type=\"python-exception\">\r\n          <properties notifyOnTerminate=\"true\" exception=\"BaseException\">\r\n            <option name=\"notifyOnTerminate\" value=\"true\" />\r\n          </properties>\r\n        </breakpoint>\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 59eec5598a1d8b73db2fba7ab9d719c97f8301a6)
+++ b/.idea/workspace.xml	(date 1645461988044)
@@ -4,12 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="8073fbcf-d5eb-4eea-913b-d9d2eda5b663" name="Changes" comment="Changes">
-      <change beforePath="$PROJECT_DIR$/.idea/RF_Balance_Profound.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/RF_Balance_Profound.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="8073fbcf-d5eb-4eea-913b-d9d2eda5b663" name="Changes" comment="added return statement to go_to_position">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logs/motor.log" beforeDir="false" afterPath="$PROJECT_DIR$/logs/motor.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logs/wtf.log" beforeDir="false" afterPath="$PROJECT_DIR$/logs/wtf.log" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/manager.py" beforeDir="false" afterPath="$PROJECT_DIR$/manager.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,6 +21,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="main" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="GitSEFilterConfiguration">
@@ -148,9 +150,9 @@
       <method v="2" />
     </configuration>
     <list>
-      <item itemvalue="Python.MainWindow" />
       <item itemvalue="Python.dialog_password" />
       <item itemvalue="Python.main" />
+      <item itemvalue="Python.MainWindow" />
       <item itemvalue="Python.ui_password_dialog" />
     </list>
     <recent_temporary>
@@ -171,6 +173,14 @@
       <option name="presentableId" value="Default" />
       <updated>1644004743794</updated>
     </task>
+    <task id="LOCAL-00001" summary="added return statement to go_to_position">
+      <created>1645460389796</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1645460389796</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -185,15 +195,12 @@
     </option>
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="added return statement to go_to_position" />
+    <option name="LAST_COMMIT_MESSAGE" value="added return statement to go_to_position" />
+  </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/Hardware/abstract_motor_controller.py</url>
-          <line>297</line>
-          <option name="timeStamp" value="29" />
-        </line-breakpoint>
-      </breakpoints>
       <default-breakpoints>
         <breakpoint type="python-exception">
           <properties notifyOnTerminate="true" exception="BaseException">
